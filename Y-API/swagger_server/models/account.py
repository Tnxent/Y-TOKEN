# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Account(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, account_id: str=None, hash: str=None, status: str=None, message: str=None, public_key: str=None, private_key: str=None):  # noqa: E501
        """Account - a model defined in Swagger

        :param account_id: The account_id of this Account.  # noqa: E501
        :type account_id: str
        :param hash: The hash of this Account.  # noqa: E501
        :type hash: str
        :param status: The status of this Account.  # noqa: E501
        :type status: str
        :param message: The message of this Account.  # noqa: E501
        :type message: str
        :param public_key: The public_key of this Account.  # noqa: E501
        :type public_key: str
        :param private_key: The private_key of this Account.  # noqa: E501
        :type private_key: str
        """
        self.swagger_types = {
            'account_id': str,
            'hash': str,
            'status': str,
            'message': str,
            'public_key': str,
            'private_key': str
        }

        self.attribute_map = {
            'account_id': 'account_id',
            'hash': 'hash',
            'status': 'status',
            'message': 'message',
            'public_key': 'public_key',
            'private_key': 'private_key'
        }
        self._account_id = account_id
        self._hash = hash
        self._status = status
        self._message = message
        self._public_key = public_key
        self._private_key = private_key

    @classmethod
    def from_dict(cls, dikt) -> 'Account':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Account of this Account.  # noqa: E501
        :rtype: Account
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self) -> str:
        """Gets the account_id of this Account.

        Id de la cuenta.  # noqa: E501

        :return: The account_id of this Account.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id: str):
        """Sets the account_id of this Account.

        Id de la cuenta.  # noqa: E501

        :param account_id: The account_id of this Account.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def hash(self) -> str:
        """Gets the hash of this Account.

        hash de la transacción.  # noqa: E501

        :return: The hash of this Account.
        :rtype: str
        """
        return self._hash

    @hash.setter
    def hash(self, hash: str):
        """Sets the hash of this Account.

        hash de la transacción.  # noqa: E501

        :param hash: The hash of this Account.
        :type hash: str
        """

        self._hash = hash

    @property
    def status(self) -> str:
        """Gets the status of this Account.

        resultado de la transacción.  # noqa: E501

        :return: The status of this Account.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this Account.

        resultado de la transacción.  # noqa: E501

        :param status: The status of this Account.
        :type status: str
        """

        self._status = status

    @property
    def message(self) -> str:
        """Gets the message of this Account.

        mensaje del resultado de la registración.  # noqa: E501

        :return: The message of this Account.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this Account.

        mensaje del resultado de la registración.  # noqa: E501

        :param message: The message of this Account.
        :type message: str
        """

        self._message = message

    @property
    def public_key(self) -> str:
        """Gets the public_key of this Account.

        clave pública de la cuenta.  # noqa: E501

        :return: The public_key of this Account.
        :rtype: str
        """
        return self._public_key

    @public_key.setter
    def public_key(self, public_key: str):
        """Sets the public_key of this Account.

        clave pública de la cuenta.  # noqa: E501

        :param public_key: The public_key of this Account.
        :type public_key: str
        """

        self._public_key = public_key

    @property
    def private_key(self) -> str:
        """Gets the private_key of this Account.

        clave privada de la cuenta.  # noqa: E501

        :return: The private_key of this Account.
        :rtype: str
        """
        return self._private_key

    @private_key.setter
    def private_key(self, private_key: str):
        """Sets the private_key of this Account.

        clave privada de la cuenta.  # noqa: E501

        :param private_key: The private_key of this Account.
        :type private_key: str
        """

        self._private_key = private_key
